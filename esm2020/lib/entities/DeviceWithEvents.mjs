import { BaseEntity } from '../entities/BaseEntity';
// DeviceWithEvents entity is a device with its related events (for display only)
export class DeviceWithEvents extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlV2l0aEV2ZW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXB1bHNlLWxpYi9zcmMvbGliL2VudGl0aWVzL0RldmljZVdpdGhFdmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBTXBELGlGQUFpRjtBQUNqRixNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsVUFBVTtDQTREL0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJpbmdLZXlWYWx1ZSB9IGZyb20gJy4uL2NvbW1vbi9TdHJpbmdLZXlWYWx1ZSc7XG5pbXBvcnQgeyBEZXZpY2VBY3Rpb25Db2RlIH0gZnJvbSAnLi4vZW51bXMvRGV2aWNlQWN0aW9uQ29kZSc7XG5pbXBvcnQgeyBFdmVudCB9IGZyb20gJy4uL2VudGl0aWVzL0V2ZW50JztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuLi9lbnRpdGllcy9CYXNlRW50aXR5JztcbmltcG9ydCB7IERldmljZVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvRGV2aWNlVHlwZUNvZGUnO1xuaW1wb3J0IHsgRGV2aWNlU3RhdHVzQ29kZSB9IGZyb20gJy4uL2VudW1zL0RldmljZVN0YXR1c0NvZGUnO1xuXG5cblxuLy8gRGV2aWNlV2l0aEV2ZW50cyBlbnRpdHkgaXMgYSBkZXZpY2Ugd2l0aCBpdHMgcmVsYXRlZCBldmVudHMgKGZvciBkaXNwbGF5IG9ubHkpXG5leHBvcnQgY2xhc3MgRGV2aWNlV2l0aEV2ZW50cyBleHRlbmRzIEJhc2VFbnRpdHkge1xuIFxuICAgIC8vIEFjY291bnQgSWQgXG4gICAgcHVibGljIGFjY291bnRJZDogc3RyaW5nO1xuIFxuICAgIC8vIFN0cmVhbSBJZCBcbiAgICBwdWJsaWMgc3RyZWFtSWQ6IHN0cmluZztcbiBcbiAgICAvLyBEZXZpY2UgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIERldmljZSBkZXNjcmlwdGlvbiBcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBEZXZpY2UgdHlwZTogVU5ERUZJTkVEIHwgQ09OVFJPTExFUiB8IE1FVEVSIHwgU0VOU09SIC4uLiBcbiAgICBwdWJsaWMgdHlwZTogRGV2aWNlVHlwZUNvZGU7XG4gXG4gICAgLy8gRGV2aWNlIHN0YXR1czogVU5ERUZJTkVEIHwgUEVORElORyB8IEFDVElWRSB8ICBJTkFDVElWRSB8IFNVU1BFTkRFRCBcbiAgICBwdWJsaWMgc3RhdHVzOiBEZXZpY2VTdGF0dXNDb2RlO1xuIFxuICAgIC8vIERldmljZSBsYXN0IGFjdGl2aXR5IHRpbWVzdGFtcCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIGxhc3RBY3Rpdml0eTogbnVtYmVyO1xuIFxuICAgIC8vIERldmljZSBNQUMgYWRkcmVzcyBcbiAgICBwdWJsaWMgbWFjOiBzdHJpbmc7XG4gXG4gICAgLy8gRGV2aWNlIElQIGFkZHJlc3MgKElQdjQgb3IgSVB2NikgXG4gICAgcHVibGljIGlwOiBzdHJpbmc7XG4gXG4gICAgLy8gRGV2aWNlIG1vYmlsZSBzdWJzY3JpYmVyIGlkIChJTVNJIG9yIFNVUEkgZm9yIDVHKSBcbiAgICBwdWJsaWMgc2lkOiBzdHJpbmc7XG4gXG4gICAgLy8gRGV2aWNlIG1vYmlsZSBlcXVpcG1lbnQgaWQgKElNRUkgb3IgUEVJIGZvciA1RykgXG4gICAgcHVibGljIGVpZDogc3RyaW5nO1xuIFxuICAgIC8vIERldmljZSBjdXJyZW50IHNlY3VyaXR5IHNjb3JlIFxuICAgIHB1YmxpYyBzY29yZTogbnVtYmVyO1xuIFxuICAgIC8vIExpc3Qgb2YgZGV2aWNlIHRhZ3MgXG4gICAgcHVibGljIHRhZ3M6IHN0cmluZ1tdO1xuIFxuICAgIC8vIEN1c3RvbSBhdHRyaWJ1dGVzIChrZXktdmFsdWUgcGFpcnMpIFxuICAgIHB1YmxpYyBsYWJlbHM6IFN0cmluZ0tleVZhbHVlW107XG4gXG4gICAgLy8gTnVtYmVyIG9mIGV2ZW50cyBmb3IgdGhlIHRpbWUgcGVyaW9kIChjYWxjdWxhdGVkIGZpZWxkKSBcbiAgICBwdWJsaWMgZXZlbnRDb3VudDogbnVtYmVyO1xuIFxuICAgIC8vIEFjdGlvbiBhcHBsaWVkIG9uIHRoZSBkZXZpY2UgXG4gICAgcHVibGljIGFjdGlvbkFwcGxpZWQ6IERldmljZUFjdGlvbkNvZGU7XG4gXG4gICAgLy8gV2hvIGFwcGxpZWQgdGhlIGFjdGlvbiAodXNlciBpZCkgXG4gICAgcHVibGljIGFjdGlvbkFwcGxpZWRCeTogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gYWN0aW9uIHdhcyBhcHBsaWVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgYWN0aW9uQXBwbGllZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gRGV2aWNlIGV2ZW50cyBsaXN0IFxuICAgIHB1YmxpYyBldmVudHM6IEV2ZW50W107XG4gXG4gXG59XG5cblxuIl19