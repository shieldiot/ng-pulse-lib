// Device status code
export var DeviceStatusCode;
(function (DeviceStatusCode) {
    // Undefined [0] 
    DeviceStatusCode[DeviceStatusCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Device is registered and pending verification [1] 
    DeviceStatusCode[DeviceStatusCode["PENDING"] = 1] = "PENDING";
    // Active device in the system [2] 
    DeviceStatusCode[DeviceStatusCode["ACTIVE"] = 2] = "ACTIVE";
    // Inactive device [3] 
    DeviceStatusCode[DeviceStatusCode["INACTIVE"] = 3] = "INACTIVE";
    // Suspended device (about to be deleted) [4] 
    DeviceStatusCode[DeviceStatusCode["SUSPENDED"] = 4] = "SUSPENDED";
})(DeviceStatusCode || (DeviceStatusCode = {}));
// Return list of DeviceStatusCode values and their display names
export function GetDeviceStatusCodes() {
    let result = new Map();
    result.set(DeviceStatusCode.UNDEFINED, 'Undefined');
    result.set(DeviceStatusCode.PENDING, 'Pending');
    result.set(DeviceStatusCode.ACTIVE, 'Active');
    result.set(DeviceStatusCode.INACTIVE, 'Inactive');
    result.set(DeviceStatusCode.SUSPENDED, 'Suspended');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlU3RhdHVzQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXB1bHNlLWxpYi9zcmMvbGliL2VudW1zL0RldmljZVN0YXR1c0NvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EscUJBQXFCO0FBQ3JCLE1BQU0sQ0FBTixJQUFZLGdCQWlCWDtBQWpCRCxXQUFZLGdCQUFnQjtJQUV4QixpQkFBaUI7SUFDakIsaUVBQWEsQ0FBQTtJQUViLHFEQUFxRDtJQUNyRCw2REFBVyxDQUFBO0lBRVgsbUNBQW1DO0lBQ25DLDJEQUFVLENBQUE7SUFFVix1QkFBdUI7SUFDdkIsK0RBQVksQ0FBQTtJQUVaLDhDQUE4QztJQUM5QyxpRUFBYSxDQUFBO0FBRWpCLENBQUMsRUFqQlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQWlCM0I7QUFFRCxpRUFBaUU7QUFDakUsTUFBTSxVQUFVLG9CQUFvQjtJQUVoQyxJQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBNEIsQ0FBQztJQUdqRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUVoRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUU5QyxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUVsRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUdwRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBEZXZpY2Ugc3RhdHVzIGNvZGVcbmV4cG9ydCBlbnVtIERldmljZVN0YXR1c0NvZGUge1xuIFxuICAgIC8vIFVuZGVmaW5lZCBbMF0gXG4gICAgVU5ERUZJTkVEID0gMCxcbiBcbiAgICAvLyBEZXZpY2UgaXMgcmVnaXN0ZXJlZCBhbmQgcGVuZGluZyB2ZXJpZmljYXRpb24gWzFdIFxuICAgIFBFTkRJTkcgPSAxLFxuIFxuICAgIC8vIEFjdGl2ZSBkZXZpY2UgaW4gdGhlIHN5c3RlbSBbMl0gXG4gICAgQUNUSVZFID0gMixcbiBcbiAgICAvLyBJbmFjdGl2ZSBkZXZpY2UgWzNdIFxuICAgIElOQUNUSVZFID0gMyxcbiBcbiAgICAvLyBTdXNwZW5kZWQgZGV2aWNlIChhYm91dCB0byBiZSBkZWxldGVkKSBbNF0gXG4gICAgU1VTUEVOREVEID0gNCxcbiBcbn1cblxuLy8gUmV0dXJuIGxpc3Qgb2YgRGV2aWNlU3RhdHVzQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXREZXZpY2VTdGF0dXNDb2RlcygpIDogTWFwPERldmljZVN0YXR1c0NvZGUsIHN0cmluZz4ge1xuXG4gICAgbGV0IHJlc3VsdCA9IG5ldyBNYXA8RGV2aWNlU3RhdHVzQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChEZXZpY2VTdGF0dXNDb2RlLlVOREVGSU5FRCwgJ1VuZGVmaW5lZCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoRGV2aWNlU3RhdHVzQ29kZS5QRU5ESU5HLCAnUGVuZGluZycpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoRGV2aWNlU3RhdHVzQ29kZS5BQ1RJVkUsICdBY3RpdmUnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KERldmljZVN0YXR1c0NvZGUuSU5BQ1RJVkUsICdJbmFjdGl2ZScpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoRGV2aWNlU3RhdHVzQ29kZS5TVVNQRU5ERUQsICdTdXNwZW5kZWQnKTtcbiAgICBcblxuICAgIHJldHVybiByZXN1bHQ7XG59Il19