// Account type code
export var AccountTypeCode;
(function (AccountTypeCode) {
    // Undefined [0] 
    AccountTypeCode[AccountTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Demo account for internal use [1] 
    AccountTypeCode[AccountTypeCode["DEMO"] = 1] = "DEMO";
    // Trial account for pilots [2] 
    AccountTypeCode[AccountTypeCode["TRIAL"] = 2] = "TRIAL";
    // Active account for partner [3] 
    AccountTypeCode[AccountTypeCode["PARTNER"] = 3] = "PARTNER";
    // Active account for paying customers [4] 
    AccountTypeCode[AccountTypeCode["CUSTOMER"] = 4] = "CUSTOMER";
})(AccountTypeCode || (AccountTypeCode = {}));
// Return list of AccountTypeCode values and their display names
export function GetAccountTypeCodes() {
    let result = new Map();
    result.set(AccountTypeCode.UNDEFINED, 'Undefined');
    result.set(AccountTypeCode.DEMO, 'Demo');
    result.set(AccountTypeCode.TRIAL, 'Trial');
    result.set(AccountTypeCode.PARTNER, 'Partner');
    result.set(AccountTypeCode.CUSTOMER, 'Customer');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudFR5cGVDb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctcHVsc2UtbGliL3NyYy9saWIvZW51bXMvQWNjb3VudFR5cGVDb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLG9CQUFvQjtBQUNwQixNQUFNLENBQU4sSUFBWSxlQWlCWDtBQWpCRCxXQUFZLGVBQWU7SUFFdkIsaUJBQWlCO0lBQ2pCLCtEQUFhLENBQUE7SUFFYixxQ0FBcUM7SUFDckMscURBQVEsQ0FBQTtJQUVSLGdDQUFnQztJQUNoQyx1REFBUyxDQUFBO0lBRVQsa0NBQWtDO0lBQ2xDLDJEQUFXLENBQUE7SUFFWCwyQ0FBMkM7SUFDM0MsNkRBQVksQ0FBQTtBQUVoQixDQUFDLEVBakJXLGVBQWUsS0FBZixlQUFlLFFBaUIxQjtBQUVELGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsbUJBQW1CO0lBRS9CLElBQUksTUFBTSxHQUFHLElBQUksR0FBRyxFQUEyQixDQUFDO0lBR2hELE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVuRCxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFekMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUUvQyxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFHakQsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gQWNjb3VudCB0eXBlIGNvZGVcbmV4cG9ydCBlbnVtIEFjY291bnRUeXBlQ29kZSB7XG4gXG4gICAgLy8gVW5kZWZpbmVkIFswXSBcbiAgICBVTkRFRklORUQgPSAwLFxuIFxuICAgIC8vIERlbW8gYWNjb3VudCBmb3IgaW50ZXJuYWwgdXNlIFsxXSBcbiAgICBERU1PID0gMSxcbiBcbiAgICAvLyBUcmlhbCBhY2NvdW50IGZvciBwaWxvdHMgWzJdIFxuICAgIFRSSUFMID0gMixcbiBcbiAgICAvLyBBY3RpdmUgYWNjb3VudCBmb3IgcGFydG5lciBbM10gXG4gICAgUEFSVE5FUiA9IDMsXG4gXG4gICAgLy8gQWN0aXZlIGFjY291bnQgZm9yIHBheWluZyBjdXN0b21lcnMgWzRdIFxuICAgIENVU1RPTUVSID0gNCxcbiBcbn1cblxuLy8gUmV0dXJuIGxpc3Qgb2YgQWNjb3VudFR5cGVDb2RlIHZhbHVlcyBhbmQgdGhlaXIgZGlzcGxheSBuYW1lc1xuZXhwb3J0IGZ1bmN0aW9uIEdldEFjY291bnRUeXBlQ29kZXMoKSA6IE1hcDxBY2NvdW50VHlwZUNvZGUsIHN0cmluZz4ge1xuXG4gICAgbGV0IHJlc3VsdCA9IG5ldyBNYXA8QWNjb3VudFR5cGVDb2RlLCBzdHJpbmc+KCk7XG5cbiAgICBcbiAgICByZXN1bHQuc2V0KEFjY291bnRUeXBlQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KEFjY291bnRUeXBlQ29kZS5ERU1PLCAnRGVtbycpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoQWNjb3VudFR5cGVDb2RlLlRSSUFMLCAnVHJpYWwnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KEFjY291bnRUeXBlQ29kZS5QQVJUTkVSLCAnUGFydG5lcicpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoQWNjb3VudFR5cGVDb2RlLkNVU1RPTUVSLCAnQ3VzdG9tZXInKTtcbiAgICBcblxuICAgIHJldHVybiByZXN1bHQ7XG59Il19