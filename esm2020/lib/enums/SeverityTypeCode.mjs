// Severity type (level) code
export var SeverityTypeCode;
(function (SeverityTypeCode) {
    // Undefined [0] 
    SeverityTypeCode[SeverityTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Low severity [1] 
    SeverityTypeCode[SeverityTypeCode["LOW"] = 1] = "LOW";
    // Medium severity [2] 
    SeverityTypeCode[SeverityTypeCode["MEDIUM"] = 2] = "MEDIUM";
    // High severity [3] 
    SeverityTypeCode[SeverityTypeCode["HIGH"] = 3] = "HIGH";
    // Critical severity [4] 
    SeverityTypeCode[SeverityTypeCode["CRITICAL"] = 4] = "CRITICAL";
})(SeverityTypeCode || (SeverityTypeCode = {}));
// Return list of SeverityTypeCode values and their display names
export function GetSeverityTypeCodes() {
    let result = new Map();
    result.set(SeverityTypeCode.UNDEFINED, 'Undefined');
    result.set(SeverityTypeCode.LOW, 'Low');
    result.set(SeverityTypeCode.MEDIUM, 'Medium');
    result.set(SeverityTypeCode.HIGH, 'High');
    result.set(SeverityTypeCode.CRITICAL, 'Critical');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V2ZXJpdHlUeXBlQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXB1bHNlLWxpYi9zcmMvbGliL2VudW1zL1NldmVyaXR5VHlwZUNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsNkJBQTZCO0FBQzdCLE1BQU0sQ0FBTixJQUFZLGdCQWlCWDtBQWpCRCxXQUFZLGdCQUFnQjtJQUV4QixpQkFBaUI7SUFDakIsaUVBQWEsQ0FBQTtJQUViLG9CQUFvQjtJQUNwQixxREFBTyxDQUFBO0lBRVAsdUJBQXVCO0lBQ3ZCLDJEQUFVLENBQUE7SUFFVixxQkFBcUI7SUFDckIsdURBQVEsQ0FBQTtJQUVSLHlCQUF5QjtJQUN6QiwrREFBWSxDQUFBO0FBRWhCLENBQUMsRUFqQlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQWlCM0I7QUFFRCxpRUFBaUU7QUFDakUsTUFBTSxVQUFVLG9CQUFvQjtJQUVoQyxJQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBNEIsQ0FBQztJQUdqRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUV4QyxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUU5QyxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUUxQyxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUdsRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBTZXZlcml0eSB0eXBlIChsZXZlbCkgY29kZVxuZXhwb3J0IGVudW0gU2V2ZXJpdHlUeXBlQ29kZSB7XG4gXG4gICAgLy8gVW5kZWZpbmVkIFswXSBcbiAgICBVTkRFRklORUQgPSAwLFxuIFxuICAgIC8vIExvdyBzZXZlcml0eSBbMV0gXG4gICAgTE9XID0gMSxcbiBcbiAgICAvLyBNZWRpdW0gc2V2ZXJpdHkgWzJdIFxuICAgIE1FRElVTSA9IDIsXG4gXG4gICAgLy8gSGlnaCBzZXZlcml0eSBbM10gXG4gICAgSElHSCA9IDMsXG4gXG4gICAgLy8gQ3JpdGljYWwgc2V2ZXJpdHkgWzRdIFxuICAgIENSSVRJQ0FMID0gNCxcbiBcbn1cblxuLy8gUmV0dXJuIGxpc3Qgb2YgU2V2ZXJpdHlUeXBlQ29kZSB2YWx1ZXMgYW5kIHRoZWlyIGRpc3BsYXkgbmFtZXNcbmV4cG9ydCBmdW5jdGlvbiBHZXRTZXZlcml0eVR5cGVDb2RlcygpIDogTWFwPFNldmVyaXR5VHlwZUNvZGUsIHN0cmluZz4ge1xuXG4gICAgbGV0IHJlc3VsdCA9IG5ldyBNYXA8U2V2ZXJpdHlUeXBlQ29kZSwgc3RyaW5nPigpO1xuXG4gICAgXG4gICAgcmVzdWx0LnNldChTZXZlcml0eVR5cGVDb2RlLlVOREVGSU5FRCwgJ1VuZGVmaW5lZCcpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoU2V2ZXJpdHlUeXBlQ29kZS5MT1csICdMb3cnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFNldmVyaXR5VHlwZUNvZGUuTUVESVVNLCAnTWVkaXVtJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChTZXZlcml0eVR5cGVDb2RlLkhJR0gsICdIaWdoJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChTZXZlcml0eVR5cGVDb2RlLkNSSVRJQ0FMLCAnQ3JpdGljYWwnKTtcbiAgICBcblxuICAgIHJldHVybiByZXN1bHQ7XG59Il19